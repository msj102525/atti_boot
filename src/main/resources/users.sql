-- USER 테이블

-- 테이블 삭제 
DROP TABLE USERS CASCADE CONSTRAINTS;

-- 테이블 생성
CREATE TABLE USERS (
   USER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
   PASSWORD VARCHAR2(250),
   USER_NAME VARCHAR2(100),
   NICK_NAME VARCHAR2(50),
   EMAIL VARCHAR2(100) NOT NULL,
   PHONE VARCHAR2(50),
   BIRTH_DATE DATE,
   USER_TYPE CHAR(1) DEFAULT 'U' NOT NULL,
   GENDER CHAR(1),
   PROFILE_URL VARCHAR2(150),
   LOGIN_TIME TIMESTAMP,
   login_type VARCHAR2(50),
   sns_access_token VARCHAR2(150),
   CONSTRAINT PK_USER PRIMARY KEY (USER_ID),
   CONSTRAINT UNQ_USER_EMAIL UNIQUE (EMAIL),
   CONSTRAINT CHK_USER_TYPE CHECK (USER_TYPE IN ('U','A','D')),
   CONSTRAINT CHK_GENDER CHECK (GENDER IN ('M', 'F'))
);

--테이블 주석
COMMENT ON TABLE USERS IS '유저 관리';

COMMENT ON COLUMN USERS.USER_ID IS '아이디';
COMMENT ON COLUMN USERS.PASSWORD IS '비밀번호';
COMMENT ON COLUMN USERS.USER_NAME IS '이름';
COMMENT ON COLUMN USERS.NICK_NAME IS '닉네임';
COMMENT ON COLUMN USERS.EMAIL IS '이메일';
COMMENT ON COLUMN USERS.PHONE IS '전화번호';
COMMENT ON COLUMN USERS.BIRTH_DATE IS '생년월일';
COMMENT ON COLUMN USERS.USER_TYPE IS '회원 타입';
COMMENT ON COLUMN USERS.GENDER IS '성별';
COMMENT ON COLUMN USERS.PROFILE_URL IS '프로필 URL';
COMMENT ON COLUMN USERS.LOGIN_TIME is '로그인시간';
COMMENT ON COLUMN USERS.login_type is '로그인타입';
COMMENT ON COLUMN USERS.sns_access_token is 'sns토큰';

-- 인덱스 추가
CREATE INDEX IDX_USER_PHONE ON USERS (PHONE);


-- TOKEN_LOGIN 테이블

-- 인덱스와 테이블 삭제

ALTER TABLE TOKEN_LOGIN DROP CONSTRAINT PK_TOKEN_LOGIN;

DROP TABLE TOKEN_LOGIN CASCADE CONSTRAINTS;

CREATE TABLE TOKEN_LOGIN (
   USER_ID VARCHAR2(50) NOT NULL,
   ACCESSTOKEN VARCHAR2(255),
   REFRESHTOKEN VARCHAR2(255),
   ACCESS_CREATED DATE,
   ACCESS_EXPIRES DATE,
   REFRESH_EXPIRES DATE,
   REFRESH_CREATED DATE
);

COMMENT ON TABLE TOKEN_LOGIN IS '토큰';

COMMENT ON COLUMN TOKEN_LOGIN.USER_ID IS '유저아이디';

COMMENT ON COLUMN TOKEN_LOGIN.ACCESSTOKEN IS '인증토큰';

COMMENT ON COLUMN TOKEN_LOGIN.REFRESHTOKEN IS '만료토큰';

COMMENT ON COLUMN TOKEN_LOGIN.ACCESS_CREATED IS '토큰 생성 시간';

COMMENT ON COLUMN TOKEN_LOGIN.ACCESS_EXPIRES IS '액세스 토큰 만료 시간';

COMMENT ON COLUMN TOKEN_LOGIN.REFRESH_EXPIRES IS '리프레시 토큰 만료 시간';

COMMENT ON COLUMN TOKEN_LOGIN.REFRESH_CREATED IS '리프레시 토큰 생성 시간';

-- 기본 키 제약 조건 추가
ALTER TABLE TOKEN_LOGIN
   ADD CONSTRAINT PK_TOKEN_LOGIN PRIMARY KEY (USER_ID);

-- 외래 키 제약 조건 추가
ALTER TABLE TOKEN_LOGIN
   ADD CONSTRAINT FK_USERS_TO_TOKEN_LOGIN FOREIGN KEY (USER_ID)
   REFERENCES USERS (USER_ID);


-- SOCIALLOGINS 테이블

-- 인덱스와 테이블 삭제
--DROP INDEX PK_SOCIALLOGINS;

DROP TABLE SOCIALLOGINS CASCADE CONSTRAINTS;

-- 테이블 생성
CREATE TABLE SOCIALLOGINS (
    SOCIALUSERID VARCHAR2(255) NOT NULL,
    USER_ID VARCHAR2(50) NOT NULL,
    SOCIALSITE VARCHAR2(50) NOT NULL CHECK (SOCIALSITE IN ('Naver', 'Kakao')),
    LOGIN_TIME DATE NOT NULL
);

-- 테이블 주석
COMMENT ON TABLE SOCIALLOGINS IS '소셜로그인';

COMMENT ON COLUMN SOCIALLOGINS.SOCIALUSERID IS '플렛폼 아이디';

COMMENT ON COLUMN SOCIALLOGINS.USER_ID IS '아이디';

COMMENT ON COLUMN SOCIALLOGINS.SOCIALSITE IS '플렛폼 이름';

COMMENT ON COLUMN SOCIALLOGINS.LOGIN_TIME IS '로그인 시간';

-- 복합 기본 키 생성
CREATE UNIQUE INDEX PK_SOCIALLOGINS ON SOCIALLOGINS (SOCIALUSERID ASC, USER_ID ASC);

ALTER TABLE SOCIALLOGINS ADD CONSTRAINT PK_SOCIALLOGINS PRIMARY KEY (SOCIALUSERID, USER_ID);

-- 외래 키 제약조건
ALTER TABLE SOCIALLOGINS ADD CONSTRAINT FK_USERS_TO_SOCIALLOGINS_1 FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);

commit;